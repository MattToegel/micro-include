/* microinclude.min.js — minified — generated by scripts/minify.js */
(async()=>{const e=!!window.debug,n=n=>{e&&console.log(n)};n("Running microinclude.js");const t=document.querySelectorAll("[include]");n("Found includes:");const l={};for(let e of t){const t=new URL(s.src,document.baseURI).href;n("Checking src:"),l[t]&&!l[t].multiple||(l[t]||(l[t]={element:e,multiple:e.hasAttribute("multiple")}),await fetch(t).then(e=>e.text()).then(n=>{e.innerHTML=n}).catch(n=>{e.innerHTML=`<pre style="color:red">Failed to load include: ${JSON.stringify(n)}</pre>`,console.error("Failed to fetch include:",n),window.verbose&&alert(`Failed to load include: ${JSON.stringify(n)}`)}))}})();